data2 <- read-csv ("H46table_of_GBLUP_MultiBLUP_PAs_20250204.csv")
# Set working directory
setwd("/Users/sarahjw2/Box/Widener_Lipka_Shared_Folder/TLI/Genomic_Selection/H4/kernel")
home.dir <- getwd()
# Load necessary libraries
library(ggplot2)
library(tidyr)
library(readr)
library(dplyr)
library(stringr)
# Load the CSV file
data <- read_csv("H4_table_of_GBLUP_MultiBLUP_PAs_20250204.csv")
setwd("/Users/sarahjw2/Box/Widener_Lipka_Shared_Folder/TLI/Genomic_Selection/H6/kernel")
data2 <- read-csv ("H46table_of_GBLUP_MultiBLUP_PAs_20250204.csv")
data2 <- read_csv("H6_table_of_GBLUP_MultiBLUP_PAs_20250204.csv")
# Rename the columns for clarity
colnames(data) <- c("Trait", "GBLUP", "MultiBLUP")
colnames(data2) <- c("Trait", "GBLUP", "MultiBLUP")
# Define a vector of new trait names in the correct order
new_trait_names <- c(
"MHSY-C", "MHSY-S", "PGY-S", "MHSY-A",
"XSWT-C", "XSWT-A", "XSWT-S",
"MPWT-C", "MPWT-A", "MPWT-S"
)
# Replace the old trait names with the new ones
data$Trait <- new_trait_names
data2$Trait <- new_trait_names
# Convert data from wide to long format for ggplot
data_long <- data %>%
pivot_longer(cols = c("GBLUP", "MultiBLUP"),
names_to = "Model",
values_to = "Predictive_Ability")
# Generate the bar plot
ggplot(data_long, aes(x = Trait, y = Predictive_Ability, fill = Model)) +
geom_bar(stat = "identity", position = "dodge", width = 0.6) +
scale_fill_manual(values = c("GBLUP" = "pink", "MultiBLUP" = "green")) +
coord_flip() +  # Flip for better readability
theme_minimal(base_size = 12) +
theme(axis.text.y = element_text(size = 10)) +  # Adjust text size
labs(title = "Comparison of GBLUP and MultiBLUP Predictive Abilities",
x = "Trait",
y = "Predictive Ability") +
scale_x_discrete(labels = function(x) str_wrap(x, width = 25))
# Generate the bar plot
ggplot(data_long, aes(x = Trait, y = Predictive_Ability, fill = Model)) +
geom_bar(stat = "identity", position = "dodge", width = 0.6) +
scale_fill_manual(values = c("GBLUP" = "pink", "MultiBLUP" = "green")) +
coord_flip() +  # Flip for better readability
theme_minimal(base_size = 12) +
theme(axis.text.y = element_text(size = 10)) +  # Adjust text size
labs(title = "GBLUP VS MultiBLUP PA's H4",
x = "Trait",
y = "Predictive Ability") +
scale_x_discrete(labels = function(x) str_wrap(x, width = 25))
# Generate the bar plot
ggplot(data_long, aes(x = Trait, y = Predictive_Ability, fill = Model)) +
geom_bar(stat = "identity", position = "dodge", width = 0.6) +
scale_fill_manual(values = c("GBLUP" = "lightpink", "MultiBLUP" = "lightgreen")) +
coord_flip() +  # Flip for better readability
theme_minimal(base_size = 12) +
theme(axis.text.y = element_text(size = 10)) +  # Adjust text size
labs(title = "GBLUP VS MultiBLUP PA's H4",
x = "Trait",
y = "Predictive Ability") +
scale_x_discrete(labels = function(x) str_wrap(x, width = 25))
setwd("/Users/sarahjw2/Box/Widener_Lipka_Shared_Folder/TLI/Genomic_Selection/H6/kernel")
home.dir <- getwd()
# Load necessary libraries
library(ggplot2)
library(tidyr)
library(readr)
library(dplyr)
library(stringr)
# Load the CSV file
#data <- read_csv("H4_table_of_GBLUP_MultiBLUP_PAs_20250204.csv")
data <- read_csv("H6_table_of_GBLUP_MultiBLUP_PAs_20250204.csv")
# Rename the columns for clarity
colnames(data) <- c("Trait", "GBLUP", "MultiBLUP")
# Define a vector of new trait names in the correct order
new_trait_names <- c(
"MHSY-C", "MHSY-S", "PGY-S", "MHSY-A",
"XSWT-C", "XSWT-A", "XSWT-S",
"MPWT-C", "MPWT-A", "MPWT-S"
)
# Replace the old trait names with the new ones
data$Trait <- new_trait_names
# Convert data from wide to long format for ggplot
data_long <- data %>%
pivot_longer(cols = c("GBLUP", "MultiBLUP"),
names_to = "Model",
values_to = "Predictive_Ability")
# Generate the bar plot
ggplot(data_long, aes(x = Trait, y = Predictive_Ability, fill = Model)) +
geom_bar(stat = "identity", position = "dodge", width = 0.6) +
scale_fill_manual(values = c("GBLUP" = "lightpink", "MultiBLUP" = "lightgreen")) +
coord_flip() +  # Flip for better readability
theme_minimal(base_size = 12) +
theme(axis.text.y = element_text(size = 10)) +  # Adjust text size
labs(title = "GBLUP VS MultiBLUP PA's H6",
x = "Trait",
y = "Predictive Ability") +
scale_x_discrete(labels = function(x) str_wrap(x, width = 25))
setwd("/Users/sarahjw2/Box/Widener_Lipka_Shared_Folder/TLI/Genomic_Selection/H6")
home.dir <- getwd()
# Load necessary libraries
library(ggplot2)
library(tidyr)
library(readr)
library(dplyr)
library(stringr)
# Load the CSV file
data <- read_csv("H6_table_of_Means_Sds_and_h2s.csv")
setwd("/Users/sarahjw2/Box/Widener_Lipka_Shared_Folder/TLI/Genomic_Selection/H6")
function (..., list = character(), package = NULL, lib.loc = NULL,
verbose = getOption("verbose"), envir = .GlobalEnv, overwrite = TRUE)
home.dir <- getwd()
# Load necessary libraries
library(ggplot2)
library(tidyr)
library(readr)
library(dplyr)
library(stringr)
# Load the CSV file
data <- read_csv("H6_table_of_Means_Sds_and_h2s.csv")
# Rename the columns for clarity
colnames(data) <- c("Trait", "Mean", "SD", "Heritability")
# Define a vector of new trait names in the correct order
new_trait_names <- c(
"MHSY-C", "MHSY-S", "PGY-S", "MHSY-A",
"XSWT-C", "XSWT-A", "XSWT-S",
"MPWT-C", "MPWT-A", "MPWT-S"
)
# Replace the old trait names with the new ones
data$Trait <- new_trait_names
# Plot 3: Bar plot of Heritability
ggplot(combined_data, aes(x = Trait, y = Heritability, fill = Population)) +
geom_bar(stat = "identity", position = "dodge", na.rm = TRUE) +
coord_flip() +
labs(title = "Comparison of Heritability in H4 and H6", y = "Heritability (h²)", x = "Trait") +
scale_fill_manual(values = c("H4" = "lightblue", "H6" = "lightyellow")) +
theme_minimal()
# Plot 3: Bar plot of Heritability
ggplot(data, aes(x = Trait, y = Heritability, fill = Population)) +
geom_bar(stat = "identity", position = "dodge", na.rm = TRUE) +
coord_flip() +
labs(title = "Comparison of Heritability in H4 and H6", y = "Heritability (h²)", x = "Trait") +
scale_fill_manual(values = c("H4" = "lightblue", "H6" = "lightyellow")) +
theme_minimal()
setwd("/Users/sarahjw2/Box/Widener_Lipka_Shared_Folder/TLI/Genomic_Selection/H6")
home.dir <- getwd()
# Load necessary libraries
library(ggplot2)
library(tidyr)
library(readr)
library(dplyr)
library(stringr)
# Load the CSV file
data <- read_csv("H6_table_of_Means_Sds_and_h2s.csv")
# Rename the columns for clarity
colnames(data) <- c("Trait", "Mean", "SD", "Heritability")
# Define a vector of new trait names in the correct order
new_trait_names <- c(
"MHSY-C", "MHSY-S", "PGY-S", "MHSY-A",
"XSWT-C", "XSWT-A", "XSWT-S",
"MPWT-C", "MPWT-A", "MPWT-S"
)
# Replace the old trait names with the new ones
data$Trait <- new_trait_names
# Plot 3: Bar plot of Heritability
ggplot(data, aes(x = Trait, y = Heritability, fill = Population)) +
geom_bar(stat = "identity", position = "dodge", na.rm = TRUE) +
coord_flip() +
labs(title = "Comparison of Heritability in H4 and H6", y = "Heritability (h²)", x = "Trait") +
scale_fill_manual(values = c("H4" = "lightblue", "H6" = "lightyellow")) +
theme_minimal()
# Set working directory for H6
setwd("/Users/sarahjw2/Box/Widener_Lipka_Shared_Folder/TLI/Genomic_Selection/H6")
home.dir <- getwd()
# Load necessary libraries
library(ggplot2)
library(tidyr)
library(readr)
library(dplyr)
library(stringr)
# Load the H6 CSV file
data_H6 <- read_csv("H6_table_of_Means_Sds_and_h2s.csv")
# Set working directory for H4
setwd("/Users/sarahjw2/Box/Widener_Lipka_Shared_Folder/TLI/Genomic_Selection/H4")
# Load the H4 CSV file
data_H4 <- read_csv("H4_table_of_Means_Sds_and_h2s.csv")
# Rename columns for clarity
colnames(data_H4) <- c("Trait", "Mean", "SD", "Heritability")
colnames(data_H6) <- c("Trait", "Mean", "SD", "Heritability")
# Define a vector of new trait names
new_trait_names <- c(
"MHSY-C", "MHSY-S", "PGY-S", "MHSY-A",
"XSWT-C", "XSWT-A", "XSWT-S",
"MPWT-C", "MPWT-A", "MPWT-S"
)
# Replace old trait names with new ones
data_H4$Trait <- new_trait_names
data_H6$Trait <- new_trait_names
# Add population labels
data_H4$Population <- "H4"
data_H6$Population <- "H6"
# Combine datasets
combined_data <- bind_rows(data_H4, data_H6)
# Plot: Bar plot of Heritability comparing H4 and H6
ggplot(combined_data, aes(x = Trait, y = Heritability, fill = Population)) +
geom_bar(stat = "identity", position = "dodge", na.rm = TRUE) +
coord_flip() +
labs(title = "Comparison of Heritability in H4 and H6", y = "Heritability (h²)", x = "Trait") +
scale_fill_manual(values = c("H4" = "lightblue", "H6" = "lightyellow")) +
theme_minimal() +
theme(axis.text.y = element_text(size = 10))  # Adjust text size for readability
# Plot: Bar plot of Heritability comparing H4 and H6
ggplot(combined_data, aes(x = Trait, y = Heritability, fill = Population)) +
geom_bar(stat = "identity", position = "dodge", na.rm = TRUE) +
coord_flip() +
labs(title = "Comparison of Heritability in H4 and H6", y = "Heritability (h²)", x = "Trait") +
scale_fill_manual(values = c("H4" = "lightblue", "H6" = "yellow")) +
theme_minimal() +
theme(axis.text.y = element_text(size = 10))  # Adjust text size for readability
# Set working directories and load necessary libraries
setwd("/Users/sarahjw2/Box/Widener_Lipka_Shared_Folder/TLI/Genomic_Selection/H4/kernel")
home.dir <- getwd()
library(ggplot2)
library(tidyr)
library(readr)
library(dplyr)
# Load H4 dataset
data_H4 <- read_csv("H4_table_of_GBLUP_MultiBLUP_PAs_20250204.csv")
# Load H6 dataset
setwd("/Users/sarahjw2/Box/Widener_Lipka_Shared_Folder/TLI/Genomic_Selection/H6/kernel")
data_H6 <- read_csv("H6_table_of_GBLUP_MultiBLUP_PAs_20250204.csv")
# Rename columns for clarity
colnames(data_H4) <- c("Trait", "GBLUP", "MultiBLUP")
colnames(data_H6) <- c("Trait", "GBLUP", "MultiBLUP")
# Define new abbreviated trait names
new_trait_names <- c(
"MHSY-C", "MHSY-S", "PGY-S", "MHSY-A",
"XSWT-C", "XSWT-A", "XSWT-S",
"MPWT-C", "MPWT-A", "MPWT-S"
)
# Assign new trait names
data_H4$Trait <- new_trait_names
data_H6$Trait <- new_trait_names
# Add a column to distinguish populations
data_H4$Population <- "H4"
data_H6$Population <- "H6"
# Combine both datasets
data_combined <- bind_rows(data_H4, data_H6)
# Reshape data to long format for ggplot2
data_long <- pivot_longer(data_combined, cols = c("GBLUP", "MultiBLUP"),
names_to = "Model", values_to = "Predictive_Ability")
# Create the bar chart with facets for H4 and H6
ggplot(data_long, aes(x = Trait, y = Predictive_Ability, fill = Model)) +
geom_bar(stat = "identity", position = position_dodge()) +
scale_fill_manual(values = c("GBLUP" = "pink", "MultiBLUP" = "green")) +
theme_minimal() +
labs(title = "Comparison of GBLUP and MultiBLUP PA's in H4 and H6",
x = "Trait",
y = "Predictive Ability") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +  # Rotate x-axis labels for readability
facet_wrap(~ Population)  # Side-by-side charts for H4 and H6
# Create the bar chart with better x-axis spacing
ggplot(data_long, aes(x = Trait, y = Predictive_Ability, fill = Model)) +
# Create the bar chart with better x-axis spacing
ggplot(data_long, aes(x = Trait, y = Predictive_Ability, fill = Model)) +
scale_fill_manual(values = c("GBLUP" = "pink", "MultiBLUP" = "green")) +
labs(title = "Comparison of GBLUP and MultiBLUP PA's in H4 and H6",
y = "Predictive Ability") +
axis.text.x = element_text(size = 12, angle = 45, hjust = 1, vjust = 1),  # Rotate and space text
strip.text = element_text(size = 14)  # Adjust facet labels
scale_x_discrete(expand = c(0.2, 0.2)) +  # Add extra spacing on x-axis
# Set working directories and load necessary libraries
setwd("/Users/sarahjw2/Box/Widener_Lipka_Shared_Folder/TLI/Genomic_Selection/H4/kernel")
library(ggplot2)
library(tidyr)
library(readr)
library(dplyr)
# Load H4 dataset
data_H4 <- read_csv("H4_table_of_GBLUP_MultiBLUP_PAs_20250204.csv")
# Load H6 dataset
setwd("/Users/sarahjw2/Box/Widener_Lipka_Shared_Folder/TLI/Genomic_Selection/H6/kernel")
data_H6 <- read_csv("H6_table_of_GBLUP_MultiBLUP_PAs_20250204.csv")
# Rename columns for clarity
colnames(data_H4) <- c("Trait", "GBLUP", "MultiBLUP")
colnames(data_H6) <- c("Trait", "GBLUP", "MultiBLUP")
# Define new abbreviated trait names
new_trait_names <- c(
"MHSY-C", "MHSY-S", "PGY-S", "MHSY-A",
"XSWT-C", "XSWT-A", "XSWT-S",
"MPWT-C", "MPWT-A", "MPWT-S"
)
# Assign new trait names
data_H4$Trait <- new_trait_names
data_H6$Trait <- new_trait_names
# Add a column to distinguish populations
data_H4$Population <- "H4"
data_H6$Population <- "H6"
# Combine both datasets
data_combined <- bind_rows(data_H4, data_H6)
# Reshape data to long format for ggplot2
data_long <- pivot_longer(data_combined, cols = c("GBLUP", "MultiBLUP"),
names_to = "Model", values_to = "Predictive_Ability")
# Create the bar chart with better x-axis spacing
geom_bar(stat = "identity", position = position_dodge()) +
theme_minimal() +
x = "Trait",
theme(
plot.margin = margin(10, 10, 20, 10),  # Increase margins for better spacing
) +
facet_grid(~ Population, scales = "fre
# Create the bar chart with better x-axis spacing
ggplot(data_long, aes(x = Trait, y = Predictive_Ability, fill = Model)) +
geom_bar(stat = "identity", position = position_dodge()) +
# Load necessary libraries
library(ggplot2)
library(tidyr)
library(readr)
library(dplyr)
# Set working directories and load datasets
setwd("/Users/sarahjw2/Box/Widener_Lipka_Shared_Folder/TLI/Genomic_Selection/H4/kernel")
data_H4 <- read_csv("H4_table_of_GBLUP_MultiBLUP_PAs_20250204.csv")
setwd("/Users/sarahjw2/Box/Widener_Lipka_Shared_Folder/TLI/Genomic_Selection/H6/kernel")
data_H6 <- read_csv("H6_table_of_GBLUP_MultiBLUP_PAs_20250204.csv")
# Rename columns for clarity
colnames(data_H4) <- c("Trait", "GBLUP", "MultiBLUP")
colnames(data_H6) <- c("Trait", "GBLUP", "MultiBLUP")
# Define new abbreviated trait names
new_trait_names <- c(
"MHSY-C", "MHSY-S", "PGY-S", "MHSY-A",
"XSWT-C", "XSWT-A", "XSWT-S",
"MPWT-C", "MPWT-A", "MPWT-S"
)
# Assign new trait names
data_H4$Trait <- new_trait_names
data_H6$Trait <- new_trait_names
# Add a column to distinguish populations
data_H4$Population <- "H4"
data_H6$Population <- "H6"
# Combine both datasets
data_combined <- bind_rows(data_H4, data_H6)
# Reshape data to long format for ggplot2
data_long <- pivot_longer(data_combined, cols = c("GBLUP", "MultiBLUP"),
names_to = "Model", values_to = "Predictive_Ability")
# Create the bar chart with better x-axis spacing
ggplot(data_long, aes(x = Trait, y = Predictive_Ability, fill = Model)) +
geom_bar(stat = "identity", position = position_dodge()) +
facet_wrap(~ Population, ncol = 2) +  # Place H4 and H6 side by side
scale_fill_manual(values = c("GBLUP" = "pink", "MultiBLUP" = "green")) +
theme_minimal() +
labs(title = "Comparison of GBLUP and MultiBLUP PA's in H4 and H6",
x = "Trait",
y = "Predictive Ability") +
theme(
axis.text.x = element_text(size = 12, angle = 45, hjust = 1, vjust = 1),  # Rotate and space text
strip.text = element_text(size = 14),  # Adjust facet labels
plot.margin = margin(10, 10, 20, 10)  # Increase margins for better spacing
) +
scale_x_discrete(expand = c(0.2, 0.2))  # Extra spacing for trait names
# Create the bar chart with better x-axis spacing
ggplot(data_long, aes(x = Trait, y = Predictive_Ability, fill = Model)) +
geom_bar(stat = "identity", position = position_dodge()) +
facet_wrap(~ Population, ncol = 2) +  # Place H4 and H6 side by side
scale_fill_manual(values = c("GBLUP" = "pink", "MultiBLUP" = "green")) +
theme_minimal() +
labs(title = "Comparison of GBLUP and MultiBLUP PA's in H4 and H6",
x = "Trait",
y = "Predictive Ability") +
theme(
axis.text.x = element_text(size = 8, angle = 45, hjust = 1, vjust = 1),  # Rotate and space text
strip.text = element_text(size = 14),  # Adjust facet labels
plot.margin = margin(10, 10, 20, 10)  # Increase margins for better spacing
) +
scale_x_discrete(expand = c(0.2, 0.2))  # Extra spacing for trait names
# Create the bar chart with better x-axis spacing
ggplot(data_long, aes(x = Trait, y = Predictive_Ability, fill = Model)) +
geom_bar(stat = "identity", position = position_dodge()) +
facet_wrap(~ Population, ncol = 2) +  # Place H4 and H6 side by side
scale_fill_manual(values = c("GBLUP" = "pink", "MultiBLUP" = "green")) +
theme_minimal() +
labs(title = "Comparison of GBLUP and MultiBLUP PA's in H4 and H6",
x = "Trait",
y = "Predictive Ability") +
theme(
axis.text.x = element_text(size = 8, angle = 45, hjust = 1, vjust = 1),  # Rotate and space text
strip.text = element_text(size = 14),  # Adjust facet labels
plot.margin = margin(12, 12, 22, 12)  # Increase margins for better spacing
) +
scale_x_discrete(expand = c(0.2, 0.2))  # Extra spacing for trait names
# Create the bar chart with better x-axis spacing
ggplot(data_long, aes(x = Trait, y = Predictive_Ability, fill = Model)) +
geom_bar(stat = "identity", position = position_dodge()) +
facet_wrap(~ Population, ncol = 2) +  # Place H4 and H6 side by side
scale_fill_manual(values = c("GBLUP" = "pink", "MultiBLUP" = "green")) +
theme_minimal() +
labs(title = "Comparison of GBLUP and MultiBLUP PA's in H4 and H6",
x = "Trait",
y = "Predictive Ability") +
theme(
axis.text.x = element_text(size = 8, angle = 45, hjust = 1, vjust = 1),  # Rotate and space text
strip.text = element_text(size = 14),  # Adjust facet labels
plot.margin = margin(12, 12, 22, 12)  # Increase margins for better spacing
) +
scale_x_discrete(expand = c(0.4, 0.4))  # Extra spacing for trait names
# Create the bar chart with better x-axis spacing
ggplot(data_long, aes(x = Trait, y = Predictive_Ability, fill = Model)) +
geom_bar(stat = "identity", position = position_dodge()) +
facet_wrap(~ Population, ncol = 2) +  # Place H4 and H6 side by side
scale_fill_manual(values = c("GBLUP" = "pink", "MultiBLUP" = "green")) +
theme_minimal() +
labs(title = "Comparison of GBLUP and MultiBLUP PA's in H4 and H6",
x = "Trait",
y = "Predictive Ability") +
theme(
axis.text.x = element_text(size = 8, angle = 45, hjust = 1, vjust = 1),  # Rotate and space text
strip.text = element_text(size = 14),  # Adjust facet labels
plot.margin = margin(12, 12, 22, 12)  # Increase margins for better spacing
) +
scale_x_discrete(expand = c(0.1, 0.1))  # Extra spacing for trait names
# Create the bar chart with better x-axis spacing
ggplot(data_long, aes(x = Trait, y = Predictive_Ability, fill = Model)) +
geom_bar(stat = "identity", position = position_dodge()) +
facet_wrap(~ Population, ncol = 2) +  # Place H4 and H6 side by side
scale_fill_manual(values = c("GBLUP" = "pink", "MultiBLUP" = "green")) +
theme_minimal() +
labs(title = "Comparison of GBLUP and MultiBLUP PA's in H4 and H6",
x = "Trait",
y = "Predictive Ability") +
theme(
axis.text.x = element_text(size = 8, angle = 45, hjust = 1, vjust = 1),  # Rotate and space text
strip.text = element_text(size = 14),  # Adjust facet labels
plot.margin = margin(12, 12, 22, 12)  # Increase margins for better spacing
) +
scale_x_discrete(expand = c(0.07, 0.07))  # Extra spacing for trait names
# Create the bar chart with better x-axis spacing
ggplot(data_long, aes(x = Trait, y = Predictive_Ability, fill = Model)) +
geom_bar(stat = "identity", position = position_dodge()) +
facet_wrap(~ Population, ncol = 2) +  # Place H4 and H6 side by side
scale_fill_manual(values = c("GBLUP" = "pink", "MultiBLUP" = "green")) +
theme_minimal() +
labs(title = "Comparison of GBLUP and MultiBLUP PA's in H4 and H6",
x = "Trait",
y = "Predictive Ability") +
theme(
axis.text.x = element_text(size = 8, angle = 45, hjust = 1, vjust = 1),  # Rotate and space text
strip.text = element_text(size = 14),  # Adjust facet labels
plot.margin = margin(12, 12, 22, 12)  # Increase margins for better spacing
) +
scale_x_discrete(expand = c(0.05, 0.05))  # Extra spacing for trait names
# Create the bar chart with better x-axis spacing
ggplot(data_long, aes(x = Trait, y = Predictive_Ability, fill = Model)) +
geom_bar(stat = "identity", position = position_dodge()) +
facet_wrap(~ Population, ncol = 2) +  # Place H4 and H6 side by side
scale_fill_manual(values = c("GBLUP" = "pink", "MultiBLUP" = "green")) +
theme_minimal() +
labs(title = "Comparison of GBLUP and MultiBLUP PA's in H4 and H6",
x = "Trait",
y = "Predictive Ability") +
theme(
axis.text.x = element_text(size = 7, angle = 45, hjust = 1, vjust = 1),  # Rotate and space text
strip.text = element_text(size = 14),  # Adjust facet labels
plot.margin = margin(12, 12, 22, 12)  # Increase margins for better spacing
) +
scale_x_discrete(expand = c(0.05, 0.05))  # Extra spacing for trait names
# Create the bar chart with better x-axis spacing
ggplot(data_long, aes(x = Trait, y = Predictive_Ability, fill = Model)) +
geom_bar(stat = "identity", position = position_dodge()) +
facet_wrap(~ Population, ncol = 2) +  # Place H4 and H6 side by side
scale_fill_manual(values = c("GBLUP" = "pink", "MultiBLUP" = "green")) +
theme_minimal() +
labs(title = "Comparison of GBLUP and MultiBLUP PA's in H4 and H6",
x = "Trait",
y = "Predictive Ability") +
theme(
axis.text.x = element_text(size = 6, angle = 90, hjust = 1, vjust = 1),  # Rotate and space text
strip.text = element_text(size = 14),  # Adjust facet labels
plot.margin = margin(12, 12, 22, 12)  # Increase margins for better spacing
) +
scale_x_discrete(expand = c(0.05, 0.05))  # Extra spacing for trait names
# Create the bar chart with better x-axis spacing
ggplot(data_long, aes(x = Trait, y = Predictive_Ability, fill = Model)) +
geom_bar(stat = "identity", position = position_dodge()) +
facet_wrap(~ Population, ncol = 2) +  # Place H4 and H6 side by side
scale_fill_manual(values = c("GBLUP" = "pink", "MultiBLUP" = "green")) +
theme_minimal() +
labs(title = "Comparison of GBLUP and MultiBLUP PA's in H4 and H6",
x = "Trait",
y = "Predictive Ability") +
theme(
axis.text.x = element_text(size = 10, angle = 90, hjust = 1, vjust = 1),  # Rotate and space text
strip.text = element_text(size = 14),  # Adjust facet labels
plot.margin = margin(12, 12, 22, 12)  # Increase margins for better spacing
) +
scale_x_discrete(expand = c(0.05, 0.05))  # Extra spacing for trait names
# Create the bar chart with better x-axis spacing
ggplot(data_long, aes(x = Trait, y = Predictive_Ability, fill = Model)) +
geom_bar(stat = "identity", position = position_dodge()) +
facet_wrap(~ Population, ncol = 2) +  # Place H4 and H6 side by side
scale_fill_manual(values = c("GBLUP" = "pink", "MultiBLUP" = "green")) +
theme_minimal() +
labs(title = "GBLUP VS MultiBLUP PA's in H4 and H6",
x = "Trait",
y = "Predictive Ability") +
theme(
axis.text.x = element_text(size = 10, angle = 90, hjust = 1, vjust = 1),  # Rotate and space text
strip.text = element_text(size = 14),  # Adjust facet labels
plot.margin = margin(12, 12, 22, 12)  # Increase margins for better spacing
) +
scale_x_discrete(expand = c(0.05, 0.05))  # Extra spacing for trait names
